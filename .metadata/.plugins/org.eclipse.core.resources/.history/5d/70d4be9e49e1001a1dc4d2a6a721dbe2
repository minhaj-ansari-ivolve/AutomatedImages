package seleniumScript;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
  
import org.apache.poi.ss.usermodel.Cell;  
import org.apache.poi.ss.usermodel.*;  
import org.apache.poi.ss.usermodel.Sheet;  
import org.apache.poi.ss.usermodel.Workbook;  
import org.apache.poi.xssf.usermodel.XSSFWorkbook;  

public class UsingChrome {
	
	ChromeDriver driver;
	String creation = "This File Contains URLs of the Desired Images:";
	String url = "https://bitnami.com/stacks/virtual-machine";
	String path = "ImagesURL.txt";
	
	public void invokeBrowser() {
		
		System.setProperty("webdriver.chrome.driver", "/usr/bin/chromedriver");
		
		driver = new ChromeDriver();
		
		driver.manage().window().maximize();
	}
	
	
	public void OpenURL() {
		driver.get(url);
	}
	
	
	public void createFile() {
		try {
            Files.write(Paths.get(path), creation.getBytes());
        } catch (IOException e) {
            e.printStackTrace();
        }
	}
	
	
	public void getTitle() {
		String titleOfThePage = driver.getTitle();
		System.out.println("Title of the Page: " + titleOfThePage);
	}
	
	
	public void closeBrowser() {
		driver.quit();
	}
	
	
	public void SearchImage(String name) {
		
		try {
			JavascriptExecutor js = (JavascriptExecutor) driver;
		WebElement ImageName = driver.findElement(By.id("stackSearch"));
		ImageName.sendKeys(name);
		
		Thread.sleep(3000);

		js.executeScript("window.scrollBy(0,1000)");
		String xpath= "//*[text()="+"'"+name+"']";
		System.out.println(xpath);
		WebElement ImageText = driver.findElement(By.xpath(xpath));
		ImageText.click();
		
		}
		catch(Exception ex)
		{
			System.out.println(ex.toString());
			for(int counter=0; counter<5; counter++) {
				System.out.println("***");
			}
			System.out.println("Error in file " + name);
			for(int counter=0; counter<5; counter++) {
				System.out.println("***");
			}
			
		}
	}
	
	
	public void SaveURL() {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("window.scrollBy(0,1000)");
		
		WebElement DownloadText = driver.findElement(By.cssSelector("a[class='indirect_download_link button button-action']"));
		DownloadText.click();
		String DownloadURL = DownloadText.getAttribute("href");
		System.out.println("Download URL: " + DownloadURL);
		
		try {
			//Files.write(Paths.get("ImagesURL.txt"), DownloadURL.getBytes(), StandardOpenOption.APPEND);
			FileWriter fw = new FileWriter("ImagesURL.txt",true);
			fw.write(System.lineSeparator());
		    fw.write(DownloadURL);
		    fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }	
	}
	
	
	public String ReadCellData(int vRow, int vColumn)  
	{  
	String value=null;          //variable for storing the cell value  
	Workbook wb=null;           //initialize Workbook null  
	try  
	{  
	//reading data from a file in the form of bytes  
	FileInputStream fis=new FileInputStream("Btinami-Images for Marketplace.xlsx");  
	//constructs an XSSFWorkbook object, by buffering the whole stream into the memory  
	wb=new XSSFWorkbook(fis);  
	}  
	catch(FileNotFoundException e)  
	{  
	e.printStackTrace();  
	}  
	catch(IOException e1)  
	{  
	e1.printStackTrace();  
	}  
	Sheet sheet=wb.getSheetAt(0);   //getting the XSSFSheet object at given index  
	Row row=sheet.getRow(vRow); //returns the logical row  
	Cell cell=row.getCell(vColumn); //getting the cell representing the given column  
	value=cell.getStringCellValue();    //getting cell value  
	return value;               //returns the cell value  
	}  
	
	
	public static void main(String[] args) {
		UsingChrome chr = new UsingChrome();
		
		chr.createFile();
		chr.invokeBrowser();
		
		for(int i=1; i<100; i++) 
		{
			try {
				String vOutput=chr.ReadCellData(i, 0);   
				System.out.println(vOutput);
				String name = vOutput;
		
				chr.OpenURL();
				chr.getTitle();
				chr.SearchImage(name);
				chr.SaveURL();
			}
			catch(Exception ex)
			{
				continue;
			}
		}
		
		chr.closeBrowser();
	}

}
